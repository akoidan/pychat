apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: pychat
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: migrate-backend
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        image: "{{ .Values.image.repository_path }}:{{ .Values.image.tag }}"
        envFrom:
        - secretRef:
            name: backend-secret
        - configMapRef:
            name: cm-backend
        volumeMounts:
{{- if .Values.github }}
          - mountPath: "/usr/src/backup"
            name: backup
{{- else }}
          - mountPath: "/usr/src/backup/chat/migrations"
            name: migrations
{{- end }}
        command: ["/bin/bash", "/usr/src/backend/download_content.sh", "create_django_tables"]
      containers:
      - name: backend
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        image: "{{ .Values.image.repository_path }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: 8888
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8888
        envFrom:
        - secretRef:
            name: backend-secret
        - configMapRef:
            name: cm-backend
        volumeMounts:
          - mountPath: "/usr/src/newback/photos" # for old backend there's a symlink in docker
            name: photo
      volumes:
        - name: photo
          persistentVolumeClaim:
            claimName: pvc-photo
{{- if .Values.github }}
        - name: backup
          persistentVolumeClaim:
            claimName: pvc-backup
{{- else }}
        - name: migrations
          persistentVolumeClaim:
            claimName: pvc-migrations
{{- end }}

