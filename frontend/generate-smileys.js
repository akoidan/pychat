const emojijson = require('emoji-datasource-apple/emoji.json');
let resultingJson = {}
fs = require('fs');

let fileContent = '// Do not edit this file manually. It was generated with "yarn generate-smileys"\n';
emojijson.forEach(e => {
   const varName = `s${e.image.replace(/-/g, '').replace('.png', '')}`;
   // ../../../node_modules
   // otherwise can't resolve :(
   let fileName = `emoji-datasource-apple/img/apple/64/${e.image}`;
   if (!fs.existsSync(`./node_modules/${fileName}`)) {
      return
   }
   fileContent += `import ${varName} from '${fileName}';\n`;
   if (!resultingJson[e.category]) {
      resultingJson[e.category] = {}
      console.log("Adding category: " + e.category);
   }
   resultingJson[e.category][hexDecode(e.unified)] ={
      src: '___'+ varName, // add ___ prefix ti img value so it can be replaced on regex later
      alt: e.short_names[0]
   }
});

function hexDecode(v){
  return '---'+ v.replace(/-/g, '---')
}
const preparedJson = {
   'Smileys': resultingJson['Smileys & Emotion'],
   'People': resultingJson['People & Body'],
   'Nature': resultingJson['Animals & Nature'],
   'Activity': resultingJson['Activities'],
   'Travel & Places': resultingJson['Travel & Places'],
   'Objects': resultingJson['Objects'],
   'Flags': resultingJson['Flags'],
   'Symbols': resultingJson['Symbols'],
}
let smileyData = JSON.stringify(preparedJson, null, 2);
smileyData = smileyData.replace(/"___((\w|-)+)"/g, '$1')
smileyData =  smileyData.replace(/---/g, '\\u')

fileContent += `
export interface Smile {
  alt: string;
  src: typeof import('.png');
}

export type SmileysStructure = Record<string, Record<string, Smile>>;
export const smileys: SmileysStructure = ${smileyData}
`

let fileName = `${__dirname}/src/ts/utils/smileys.ts`;
fs.writeFile(fileName, fileContent, function (err) {
   if (err) return console.error(err);
   console.log(`Finished writing to ${fileName}`);
});
